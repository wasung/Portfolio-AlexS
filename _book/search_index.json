[["index.html", "Portfolio DSFB 1 Introduction 1.1 Contact", " Portfolio DSFB 1 Introduction welcome to my Data Science for Biology portfolio! My name is Alex Sung, and I am a life scientist with a interest in applying data science techniques to solve biological problems.I am currently pursuing a Bachelor’s degree in Life Science with a specialization in Biomolecular Research at HU University of Applied Sciences in Utrecht, the Netherlands. Additionally, I am minoring in Data Science for Biology, which has allowed me to explore the intersection of life sciences and computational methods. The course is created by … This github page will serve as my portfolio as data scientist. 1.1 Contact email: wkasung@gmail.com github: "],["curriculum-vitae-wing-kien-alex-sung.html", "2 Curriculum Vitae Wing-kien Alex Sung Education Work Experience Activities Additional Skills", " 2 Curriculum Vitae Wing-kien Alex Sung City: Utrecht Country: The Netherlands E-mail: wkasung@gmail.com Date of Birth: 24 September 2000 Nationality: Dutch Education 2020 - Present HU University of Applied Sciences, Utrecht, the Netherlands Bachelor programme Life Science Biomolecular Research specialisation Minor Data Science for Biology 2012 - 2018 Niftarlake College, Maarssen, the Netherlands General Secondary Education (upper-intermediate level) Work Experience 2023 - Present Panda Analytics BV, Rotterdam, the Netherlands Business Analyst Analyzed sales data using Power BI to extract insights and trends. Developed comprehensive dashboards aiding informed decision-making. Collaborated closely with stakeholders to translate complex data into user-friendly reports. Automated reporting processes for streamlined operations. 2023 - Present Kokoro Beauty BV, Rotterdam, the Netherlands Founder and Operational Lead Founded and steered Kokoro Skincare into a leading Japanese skincare e-commerce platform. Oversaw strategic financial planning and operational optimization. Implemented cross-functional strategies to enhance market presence in the skincare industry. 2023 - Present Future-ed, Rotterdam, the Netherlands Business strategy analyst Led strategic positioning efforts for Future-ed in the ed-tech sector. Conducted comprehensive market research and nurtured strategic partnerships. Drove innovation in marketing strategies to adapt to dynamic market conditions. 2023 – Present European Sperm Bank, Amsterdam, the Netherlands Laboratory Assistant Managed adherence to laboratory SOPs and conducted comprehensive sperm analysis. Ensured stringent quality control measures and coordinated sperm straws’ preparation and shipment. 2022 - 2022 Saltro BV, Utrecht, the Netherlands Laboratory Technician Executed precise analysis of COVID-19 samples using rt-qPCR techniques. Contributed to enhanced laboratory protocols and accurate reporting vital for public health measures. 2021 - 2021 Eurofins, Barneveld, the Netherlands Laboratory Technician Conducted soil and water pretreatment for precise ICP-MS analysis. Applied varied chemical processes to optimize sample preparation for accurate detection of contaminants. Activities 2023 – Present CSA-EUR, Rotterdam, the Netherlands Active Member Delft Committee Managed communications, vendor coordination, and event logistics for successful events. Improved existing plans and processes for enhanced event planning services. 2020 - Present HU University of Applied Sciences, Utrecht, the Netherlands Honours Programme Engaged in diverse honours courses and participated in real-world projects. Conducted research, collaborated with stakeholders, and developed impactful self-initiated projects. Additional Skills Foreign Languages: English (reading, writing, speaking: good) Computer Skills: Microsoft Office tools: Outlook, Word, Excel, PowerPoint (good command) PowerBI (good command) IBM SPSS Statistics (fair command) RStudio (fair command) Driving License: Full Hobbies: Fitness, Badminton, Reading, Photography "],["looking-ahead.html", "3 Looking ahead 3.1 Professional development", " 3 Looking ahead In the future I probably want to work in consulting. I am still highly interested in the life science sector but want to be involved in other sides of the sector. I feel like doing the data science course is something I did because I feel like its a valuable hardskill to have as I am still considering working in finance or BI. In this field its good to already have knowledge in data workflows and analysis. 3.1 Professional development To reach these goals I have a long way to go and a lot to learn in and outside of my educational carreer. During the DSFB course we are free to work on a datascience or bioinformatics related skill. For this I am probably looking at BI or python since this aligns most with what I want in my carreer. For my internship I am mainly looking at sequencing companies, they do both short and long read, but since I dont have any experience with short read sequencing I want to learn more about it. (DNA short read illumna?), variant calling. (still looking into making it more concrete.) "],["guerilla-analytics.html", "4 Guerilla Analytics", " 4 Guerilla Analytics Need to run the data at home through the pipe and clean up the folders still ( will use projecticum folders). "],["c.elegans-plate-experiment.html", "5 C.Elegans Plate experiment", " 5 C.Elegans Plate experiment Question A: “Review the following Excel file in the ./data/CE.LIQ.FLOW.062_Tidydata.xlsx, by opening the file in Excel. See if you can spot anything peculiar about this file. Do not edit the file in any way. Just close it when you are done. (Annoyingly, Excel asks you to save your changes, even if you did not touch anything in the file.)” A: Parameters tab is unclear what colomn means what. There is a ‘Raw data’ column, what does this mean and what is it for? Also would be nice to have some explanation on all the colours and why does the pink column run down so far. The other tabs are even more unclear its hard to find where things are and even more hard to find what it means. Question B: “Open the file in R, using the {readxl} package.” Question C: “Inspect the data types of columns RawData, compName and compConcentration. What types would you expect from the experimental description above. Have the data types been correctly assigned during the importing of the data into R?” C: library(&quot;here&quot;) ## here() starts at C:/Users/WASun/Documents/Portfolio-AlexS library(tidyverse) ## ── Attaching core tidyverse packages ──────────────────────────────── tidyverse 2.0.0 ── ## ✔ dplyr 1.1.4 ✔ readr 2.1.5 ## ✔ forcats 1.0.0 ✔ stringr 1.5.1 ## ✔ ggplot2 3.5.1 ✔ tibble 3.2.1 ## ✔ lubridate 1.9.3 ✔ tidyr 1.3.1 ## ✔ purrr 1.0.2 ## ── Conflicts ────────────────────────────────────────────────── tidyverse_conflicts() ── ## ✖ dplyr::filter() masks stats::filter() ## ✖ dplyr::lag() masks stats::lag() ## ℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors library(readxl) CElegans_data &lt;- read_excel(here::here(&quot;Data&quot;, &quot;CE.LIQ.FLOW.062_Tidydata.xlsx&quot;)) head(CElegans_data) ## # A tibble: 6 × 34 ## plateRow plateColumn vialNr dropCode expType expReplicate expName ## &lt;lgl&gt; &lt;lgl&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;chr&gt; ## 1 NA NA 1 a experiment 3 CE.LIQ.FLOW.062 ## 2 NA NA 1 b experiment 3 CE.LIQ.FLOW.062 ## 3 NA NA 1 c experiment 3 CE.LIQ.FLOW.062 ## 4 NA NA 1 d experiment 3 CE.LIQ.FLOW.062 ## 5 NA NA 1 e experiment 3 CE.LIQ.FLOW.062 ## 6 NA NA 2 a experiment 3 CE.LIQ.FLOW.062 ## # ℹ 27 more variables: expDate &lt;dttm&gt;, expResearcher &lt;chr&gt;, expTime &lt;dbl&gt;, ## # expUnit &lt;chr&gt;, expVolumeCounted &lt;dbl&gt;, RawData &lt;dbl&gt;, compCASRN &lt;chr&gt;, ## # compName &lt;chr&gt;, compConcentration &lt;chr&gt;, compUnit &lt;chr&gt;, ## # compDelivery &lt;chr&gt;, compVehicle &lt;chr&gt;, elegansStrain &lt;chr&gt;, ## # elegansInput &lt;dbl&gt;, bacterialStrain &lt;chr&gt;, bacterialTreatment &lt;chr&gt;, ## # bacterialOD600 &lt;dbl&gt;, bacterialConcX &lt;dbl&gt;, bacterialVolume &lt;dbl&gt;, ## # bacterialVolUnit &lt;chr&gt;, incubationVial &lt;chr&gt;, incubationVolume &lt;dbl&gt;, … Question D:“Create a graph displaying a scatterplot for the CE.LIQ.FLOW.062_Tidydata.xlsx data, for the different compounds and the varying concentrations. Put the compConcentration on the x-axis, the DataRaw counts on the y-axis and assign a colour to each level in compName. Assign a different symbol (shape =) to each level in the expType variable. Try fixing the labels of the x-axis so that we can read them.” library(ggplot2) library(tidyverse) # chr to factor conversion CElegans_data$compName &lt;- factor(CElegans_data$compName, levels = unique(CElegans_data$compName)) CElegans_data$expType &lt;- factor(CElegans_data$expType, levels = unique(CElegans_data$expType)) CElegans_data$compConcentration &lt;- parse_number(CElegans_data$compConcentration) # checking the conversion to factor levels(CElegans_data$compName) ## [1] &quot;2,6-diisopropylnaphthalene&quot; &quot;decane&quot; ## [3] &quot;naphthalene&quot; &quot;Ethanol&quot; ## [5] &quot;S-medium&quot; levels(CElegans_data$expType) ## [1] &quot;experiment&quot; &quot;controlPositive&quot; &quot;controlNegative&quot; &quot;controlVehicleA&quot; str(CElegans_data) ## tibble [360 × 34] (S3: tbl_df/tbl/data.frame) ## $ plateRow : logi [1:360] NA NA NA NA NA NA ... ## $ plateColumn : logi [1:360] NA NA NA NA NA NA ... ## $ vialNr : num [1:360] 1 1 1 1 1 2 2 2 2 2 ... ## $ dropCode : chr [1:360] &quot;a&quot; &quot;b&quot; &quot;c&quot; &quot;d&quot; ... ## $ expType : Factor w/ 4 levels &quot;experiment&quot;,&quot;controlPositive&quot;,..: 1 1 1 1 1 1 1 1 1 1 ... ## $ expReplicate : num [1:360] 3 3 3 3 3 3 3 3 3 3 ... ## $ expName : chr [1:360] &quot;CE.LIQ.FLOW.062&quot; &quot;CE.LIQ.FLOW.062&quot; &quot;CE.LIQ.FLOW.062&quot; &quot;CE.LIQ.FLOW.062&quot; ... ## $ expDate : POSIXct[1:360], format: &quot;2020-11-30&quot; &quot;2020-11-30&quot; ... ## $ expResearcher : chr [1:360] &quot;Sergio Reijnders - Ellis Herder&quot; &quot;Sergio Reijnders - Ellis Herder&quot; &quot;Sergio Reijnders - Ellis Herder&quot; &quot;Sergio Reijnders - Ellis Herder&quot; ... ## $ expTime : num [1:360] 68 68 68 68 68 68 68 68 68 68 ... ## $ expUnit : chr [1:360] &quot;hour&quot; &quot;hour&quot; &quot;hour&quot; &quot;hour&quot; ... ## $ expVolumeCounted : num [1:360] 50 50 50 50 50 50 50 50 50 50 ... ## $ RawData : num [1:360] 44 37 45 47 41 35 41 36 40 38 ... ## $ compCASRN : chr [1:360] &quot;24157-81-1&quot; &quot;24157-81-1&quot; &quot;24157-81-1&quot; &quot;24157-81-1&quot; ... ## $ compName : Factor w/ 5 levels &quot;2,6-diisopropylnaphthalene&quot;,..: 1 1 1 1 1 1 1 1 1 1 ... ## $ compConcentration : num [1:360] 4.99 4.99 4.99 4.99 4.99 4.99 4.99 4.99 4.99 4.99 ... ## $ compUnit : chr [1:360] &quot;nM&quot; &quot;nM&quot; &quot;nM&quot; &quot;nM&quot; ... ## $ compDelivery : chr [1:360] &quot;Liquid&quot; &quot;Liquid&quot; &quot;Liquid&quot; &quot;Liquid&quot; ... ## $ compVehicle : chr [1:360] &quot;controlVehicleA&quot; &quot;controlVehicleA&quot; &quot;controlVehicleA&quot; &quot;controlVehicleA&quot; ... ## $ elegansStrain : chr [1:360] &quot;N2&quot; &quot;N2&quot; &quot;N2&quot; &quot;N2&quot; ... ## $ elegansInput : num [1:360] 25 25 25 25 25 25 25 25 25 25 ... ## $ bacterialStrain : chr [1:360] &quot;OP50&quot; &quot;OP50&quot; &quot;OP50&quot; &quot;OP50&quot; ... ## $ bacterialTreatment : chr [1:360] &quot;heated&quot; &quot;heated&quot; &quot;heated&quot; &quot;heated&quot; ... ## $ bacterialOD600 : num [1:360] 0.743 0.743 0.743 0.743 0.743 0.743 0.743 0.743 0.743 0.743 ... ## $ bacterialConcX : num [1:360] 8 8 8 8 8 8 8 8 8 8 ... ## $ bacterialVolume : num [1:360] 300 300 300 300 300 300 300 300 300 300 ... ## $ bacterialVolUnit : chr [1:360] &quot;ul&quot; &quot;ul&quot; &quot;ul&quot; &quot;ul&quot; ... ## $ incubationVial : chr [1:360] &quot;1,5 glass vial&quot; &quot;1,5 glass vial&quot; &quot;1,5 glass vial&quot; &quot;1,5 glass vial&quot; ... ## $ incubationVolume : num [1:360] 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 ... ## $ incubationUnit : chr [1:360] &quot;ul&quot; &quot;ul&quot; &quot;ul&quot; &quot;ul&quot; ... ## $ incubationMethod : chr [1:360] &quot;rockroll&quot; &quot;rockroll&quot; &quot;rockroll&quot; &quot;rockroll&quot; ... ## $ incubationRPM : num [1:360] 35 35 35 35 35 35 35 35 35 35 ... ## $ bubble : logi [1:360] NA NA NA NA NA NA ... ## $ incubateTemperature: num [1:360] 20 20 20 20 20 20 20 20 20 20 ... # Plotting the scatterplot with dynamic shape assignment ggplot(CElegans_data, aes(x = log10(compConcentration), y = RawData)) + geom_point(aes(color = compName, shape = expType), size = 1.5, alpha = 0.8, position = position_jitter(width = 0.15)) + labs(title = &quot;CE.LIQ&quot;, caption = &quot;think of a caption&quot;,x = &quot; Log10 Compound Concentration&quot;, y = &quot;DataRaw Counts&quot;) + theme_minimal() + theme(axis.text.x = element_text(angle = 45, hjust = 1)) ## Warning: Removed 5 rows containing missing values or values outside the scale range ## (`geom_point()`). Question E: “When creating the plot under C), what happened with the ordering of the x-axis labels. Explain why this happens. Look at the data-type of the compConcentration column in the data again to find a clue.” The x-axis labels overlap, you need to angle them slightly so all labels are readable. "],["reproducable-research-part-1.html", "6 Reproducable research part 1 6.1 Heterologous prime-boost immunisation with mRNA- and AdC68-based 2019-nCoV variant vaccines induces broad-spectrum immune responses in mice 6.2 Estimating the effects of non-pharmaceutical interventions on COVID-19 in Europe", " 6 Reproducable research part 1 6.1 Heterologous prime-boost immunisation with mRNA- and AdC68-based 2019-nCoV variant vaccines induces broad-spectrum immune responses in mice Xingxing Li, Jingjing Liu, Wenjuan Li, Qinhua Peng, Miao Li, Zhifang Ying, Zelun Zhang, Xinyu Liu, Xiaohong Wu, Danhua Zhao, Lihong Yang, Shouchun Cao, Yanqiu Huang, Leitai Shi, Hongshan Xu, Yunpeng Wang, Guangzhi Yue, Yue Suo, Jianhui Nie, Weijin Huang, Jia Li, * and Yuhua Li. https://www.ncbi.nlm.nih.gov/pmc/articles/PMC10050358/ (add reference later) 6.1.1 Study purpose There was no concise statement in the introduction of the article, that established the reason the research was conducted. 6.1.2 Study location The study location has been mentioned in the methods, it was conducted at National institute for food and drug control (NIFDC). 6.1.3 Ethics statement There is a small ethics statement on handling of the animals and a small section on conflict of interest, this states there have been no conflicts with any other party. 6.1.4 Funding statement There is no section on fundings, however there is a section on acknowledgements. Here 2 companies are acknowledged for the provision of vaccines, it is rather unclear if these were provided for free or bought. 6.1.5 Data availability statement and location There is a small section where supplementary materials can be accessed. THere is a download link to the ‘data sheet’. The sheet is a word doc with the processed data in figures in a doc file. Access to raw data would be better to have. It does however mention that you can inquire for more data but it requires you to contact the authors but, there is no author contact info available. Furthermore no code was used for this research. #Reproducable research part 2 6.2 Estimating the effects of non-pharmaceutical interventions on COVID-19 in Europe (https://www.nature.com/articles/s41586-020-2405-7) The paper has R code shared in the project environment and has clear instructions how to reproduce the data from the paper. (Describe the code:) The script runs smoohtly after installing all packages. I got the code from : https://github.com/ImperialCollegeLondon/covid19model.git It clearly states version 7 was used for the Nature paper so I used that one. For this base-nature.r script was used. On a scale from 1-5 I would rate this paper a 5 in how easy it was to reproduce. I could import the all the scripts from their github and rerun their data through the scripts the used. library(rstan) library(data.table) library(lubridate) library(gdata) library(dplyr) library(tidyr) library(EnvStats) library(optparse) library(stringr) library(bayesplot) library(matrixStats) library(scales) library(gridExtra) library(ggpubr) library(cowplot) library(ggplot2) library(abind) source(&#39;nature/utils/process-covariates.r&#39;) # Commandline options and parsing parser &lt;- OptionParser() parser &lt;- add_option(parser, c(&quot;-D&quot;, &quot;--debug&quot;), action=&quot;store_true&quot;, help=&quot;Perform a debug run of the model&quot;) parser &lt;- add_option(parser, c(&quot;-F&quot;, &quot;--full&quot;), action=&quot;store_true&quot;, help=&quot;Perform a full run of the model&quot;) cmdoptions &lt;- parse_args(parser, args = commandArgs(trailingOnly = TRUE), positional_arguments = TRUE) # Default run parameters for the model if(is.null(cmdoptions$options$debug)) { DEBUG = Sys.getenv(&quot;DEBUG&quot;) == &quot;TRUE&quot; } else { DEBUG = cmdoptions$options$debug } # Sys.setenv(FULL = &quot;TRUE&quot;) if(is.null(cmdoptions$options$full)) { FULL = Sys.getenv(&quot;FULL&quot;) == &quot;TRUE&quot; } else { FULL = cmdoptions$options$full } if(DEBUG &amp;&amp; FULL) { stop(&quot;Setting both debug and full run modes at once is invalid&quot;) } if(length(cmdoptions$args) == 0) { StanModel = &#39;base-nature&#39; } else { StanModel = cmdoptions$args[1] } print(sprintf(&quot;Running %s&quot;,StanModel)) if(DEBUG) { print(&quot;Running in DEBUG mode&quot;) } else if (FULL) { print(&quot;Running in FULL mode&quot;) } cat(sprintf(&quot;Running:\\nStanModel = %s\\nDebug: %s\\n&quot;, StanModel,DEBUG)) # Read which countires to use countries &lt;- readRDS(&#39;nature/data/regions.rds&#39;) # Read deaths data for regions d &lt;- readRDS(&#39;nature/data/COVID-19-up-to-date.rds&#39;) # Read IFR and pop by country ifr.by.country &lt;- readRDS(&#39;nature/data/popt-ifr.rds&#39;) # Read interventions interventions &lt;- readRDS(&#39;nature/data/interventions.rds&#39;) forecast &lt;- 0 # increase to get correct number of days to simulate # Maximum number of days to simulate N2 &lt;- (max(d$DateRep) - min(d$DateRep) + 1 + forecast)[[1]] processed_data &lt;- process_covariates(countries = countries, interventions = interventions, d = d , ifr.by.country = ifr.by.country, N2 = N2) stan_data = processed_data$stan_data dates = processed_data$dates deaths_by_country = processed_data$deaths_by_country reported_cases = processed_data$reported_cases options(mc.cores = parallel::detectCores()) rstan_options(auto_write = TRUE) m = stan_model(paste0(&#39;nature/stan-models/&#39;,StanModel,&#39;.stan&#39;)) if(DEBUG) { fit = sampling(m,data=stan_data,iter=40,warmup=20,chains=2) } else if (FULL) { fit = sampling(m,data=stan_data,iter=1800,warmup=1000,chains=5,thin=1,control = list(adapt_delta = 0.99, max_treedepth = 20)) } else { fit = sampling(m,data=stan_data,iter=600,warmup=300,chains=4,thin=1,control = list(adapt_delta = 0.95, max_treedepth = 10)) } out = rstan::extract(fit) prediction = out$prediction estimated.deaths = out$E_deaths estimated.deaths.cf = out$E_deaths0 JOBID = Sys.getenv(&quot;PBS_JOBID&quot;) if(JOBID == &quot;&quot;) JOBID = as.character(abs(round(rnorm(1) * 1000000))) print(sprintf(&quot;Jobid = %s&quot;,JOBID)) countries &lt;- countries$Regions save(fit,prediction,dates,reported_cases,deaths_by_country,countries,estimated.deaths,estimated.deaths.cf,stan_data, file=paste0(&#39;nature/results/&#39;,StanModel,&#39;-&#39;,JOBID,&#39;-stanfit.Rdata&#39;)) library(bayesplot) filename &lt;- paste0(StanModel,&#39;-&#39;,JOBID) print(&#39;Generating mu, rt plots&#39;) mu = (as.matrix(out$mu)) colnames(mu) = countries g = (mcmc_intervals(mu,prob = .9)) ggsave(sprintf(&quot;nature/figures/%s-mu.png&quot;,filename),g,width=4,height=6) tmp = lapply(1:length(countries), function(i) (out$Rt_adj[,stan_data$N[i],i])) Rt_adj = do.call(cbind,tmp) colnames(Rt_adj) = countries g = (mcmc_intervals(Rt_adj,prob = .9)) ggsave(sprintf(&quot;nature/figures/%s-final-rt.png&quot;,filename),g,width=4,height=6) print(&quot;Generate 3-panel plots&quot;) source(&#39;nature/utils/plot-3-panel.r&#39;) make_three_panel_plot(filename) print(&#39;Covars plots&#39;) source(&#39;nature/utils/covariate-size-effects.r&#39;) plot_covars(filename) print(&#39;Making table&#39;) source(&#39;nature/utils/make-table.r&#39;) make_table(filename) "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
